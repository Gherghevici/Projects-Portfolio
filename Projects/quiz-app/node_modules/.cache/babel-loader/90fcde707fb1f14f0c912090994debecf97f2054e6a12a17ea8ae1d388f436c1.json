{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\quiz-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const arr = [{\n    question: [\"Care este mancarea preferata a lui Andrei?\"],\n    raspunsuri: [{\n      raspuns: \"Pizza\",\n      isTrue: false\n    }, {\n      raspuns: \"Burghir\",\n      isTrue: false\n    }, {\n      raspuns: \"Paste chinezesti\",\n      isTrue: true\n    }, {\n      raspuns: \"Salata\",\n      isTrue: false\n    }]\n  }, {\n    question: [\"Ce ii place lui Andrei?\"],\n    raspunsuri: [{\n      raspuns: \"Dormitul\",\n      isTrue: false\n    }, {\n      raspuns: \"Miruna\",\n      isTrue: true\n    }, {\n      raspuns: \"Jucatul\",\n      isTrue: false\n    }, {\n      raspuns: \"Invatatul\",\n      isTrue: false\n    }]\n  }, {\n    question: [\"Care este sucul preferat a lui Andrei\"],\n    raspunsuri: [{\n      raspuns: \"Jueps\",\n      isTrue: true\n    }, {\n      raspuns: \"Fanta\",\n      isTrue: false\n    }, {\n      raspuns: \"Cola\",\n      isTrue: false\n    }, {\n      raspuns: \"Fuze tea de fructe de padure\",\n      isTrue: false\n    }]\n  }, {\n    question: [\"In ce loc de munca ar vrea sa lucreze Andrei\"],\n    raspunsuri: [{\n      raspuns: \"In noul Palas de pe sf Andrei\",\n      isTrue: true\n    }, {\n      raspuns: \"In Palas ul cechi\",\n      isTrue: false\n    }, {\n      raspuns: \"Pe Splai Bahlui la cladirile de langa Salubris\",\n      isTrue: false\n    }, {\n      raspuns: \"De acasa din pat\",\n      isTrue: false\n    }]\n  }];\n  const [newQuestion, setNewQuestion] = useState(0);\n  const [rezultatDis, setRezultatDis] = useState(false);\n  const [rezultat, setRezultat] = useState(0);\n  const [nume, setNume] = useState(true);\n  const [numeAles, setNumeAles] = useState(\"\");\n  const [btnClassName, setBtnClassName] = useState(\"btn\");\n  const validate = (e, value) => {\n    if (newQuestion + 1 === arr.length) {\n      setTimeout(() => setRezultatDis(true), 1000);\n    }\n    setTimeout(() => {\n      setNewQuestion(newQuestion + 1);\n      setBtnClassName(\"btn\");\n    }, 1000);\n    if (e.target.value === \"true\") {\n      setRezultat(rezultat + 1);\n      setBtnClassName(\"btn green\");\n    } else {\n      setBtnClassName(\"btn red\");\n    }\n  };\n  const reset = () => {\n    setNewQuestion(0);\n    setRezultat(0);\n    setRezultatDis(false);\n    setNume(true);\n  };\n  const checkName = e => {\n    e.target.value.length > 10 ? e.target.value = \"\" : setNumeAles(e.target.value);\n  };\n  return rezultatDis ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container rezultat-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [numeAles, \" a ghicit \", rezultat, \" din \", arr.length, \" intrebari\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      className: \"btn btn-reset\",\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 4\n  }, this) : nume ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container rezultat-display\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Numele jucatorului\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => checkName(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"btn btn-reset\",\n        type: \"submit\",\n        value: \"Start\",\n        onClick: () => setNume(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Question \", newQuestion + 1, \"/\", arr.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), arr[newQuestion].question.map(value => /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 51\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-container\",\n      children: arr[newQuestion].raspunsuri.map(value => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: btnClassName,\n        onClick: e => validate(e, value.isTrue),\n        value: value.isTrue,\n        children: [value.raspuns, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 53\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CEpUjhQQT+jlbFb8uOvR3CawZSw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","arr","question","raspunsuri","raspuns","isTrue","newQuestion","setNewQuestion","rezultatDis","setRezultatDis","rezultat","setRezultat","nume","setNume","numeAles","setNumeAles","btnClassName","setBtnClassName","validate","e","value","length","setTimeout","target","reset","checkName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","map","_c","$RefreshReg$"],"sources":["C:/react/quiz-app/src/App.js"],"sourcesContent":["import React,{useState} from 'react'\n\n\nfunction App() {\nconst arr = [\n  {\n    question:[\"Care este mancarea preferata a lui Andrei?\"],\n    raspunsuri:[\n      {raspuns:\"Pizza\",isTrue:false},\n      {raspuns:\"Burghir\",isTrue:false},\n      {raspuns:\"Paste chinezesti\",isTrue:true},\n      {raspuns:\"Salata\",isTrue:false},\n    ]\n  },\n  {\n    question:[\"Ce ii place lui Andrei?\"],\n    raspunsuri:[\n      {raspuns:\"Dormitul\",isTrue:false},\n      {raspuns:\"Miruna\",isTrue:true},\n      {raspuns:\"Jucatul\",isTrue:false},\n      {raspuns:\"Invatatul\",isTrue:false},\n    ]\n  },\n  {\n    question:[\"Care este sucul preferat a lui Andrei\"],\n    raspunsuri:[\n      {raspuns:\"Jueps\",isTrue:true},\n      {raspuns:\"Fanta\",isTrue:false},\n      {raspuns:\"Cola\",isTrue:false},\n      {raspuns:\"Fuze tea de fructe de padure\",isTrue:false},\n    ]\n  },\n  {\n    question:[\"In ce loc de munca ar vrea sa lucreze Andrei\"],\n    raspunsuri:[\n      {raspuns:\"In noul Palas de pe sf Andrei\",isTrue:true},\n      {raspuns:\"In Palas ul cechi\",isTrue:false},\n      {raspuns:\"Pe Splai Bahlui la cladirile de langa Salubris\",isTrue:false},\n      {raspuns:\"De acasa din pat\",isTrue:false},\n    ]\n  }\n] \n  const [newQuestion,setNewQuestion] = useState(0);\n  const [rezultatDis,setRezultatDis] = useState(false);\n  const [rezultat,setRezultat] = useState(0);\n  const [nume,setNume] = useState(true);\n  const [numeAles,setNumeAles] = useState(\"\")\n  const [btnClassName,setBtnClassName] = useState(\"btn\");\n  const validate = (e,value)=>{\n    if(newQuestion+1 === arr.length){\n      setTimeout(()=>setRezultatDis(true),1000)\n      \n    }\n    setTimeout(()=>{\n      setNewQuestion(newQuestion+1);\n      setBtnClassName(\"btn\")\n    },1000)\n    \n    if(e.target.value ===\"true\"){\n      setRezultat(rezultat+1)\n      setBtnClassName(\"btn green\");\n    }else{\n      setBtnClassName(\"btn red\");\n    }\n  }\n  const reset = () =>{\n    setNewQuestion(0)\n    setRezultat(0)\n    setRezultatDis(false)\n    setNume(true);\n  }\n const checkName=(e)=>{\n  e.target.value.length >10?  e.target.value=\"\":setNumeAles(e.target.value)\n }\n\n  return rezultatDis?\n   <div className='container rezultat-display'>\n    <h1>{numeAles} a ghicit {rezultat} din {arr.length} intrebari</h1>\n    <button onClick={reset} className='btn btn-reset'>reset</button>\n    </div>\n  : nume? \n    <div className='container rezultat-display'>\n      <form>\n      <h1>Numele jucatorului</h1>\n      <input  type='text' onChange={(e)=>checkName(e)}></input>\n      <input className='btn btn-reset' type='submit' value='Start' onClick={()=>setNume(false)}></input>\n      \n      </form>\n      </div>\n      \n  : (\n    <div className='container'>\n      <div className='sub-container'>\n        <h1>Question {newQuestion+1}/{arr.length}</h1>\n        {arr[newQuestion].question.map((value) => <h3>{value}</h3>)}\n      </div>\n      <div className='sub-container'>\n        {arr[newQuestion].raspunsuri.map((value) => <button className={btnClassName} onClick={(e)=>validate(e,value.isTrue)} value={value.isTrue}>{value.raspuns} </button> )}    \n        \n      </div>\n   </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}